unit untPesqProdutoItens;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, DB, FIBDataSet, pFIBDataSet, Grids, DBGrids, JvExDBGrids, JvDBGrid,
  StdCtrls, Mask, RzEdit, RzButton, RzLabel, dxGDIPlusClasses, ExtCtrls,
  JvExExtCtrls, JvImage, RzPanel, RzBckgnd, RzRadGrp, RzRadChk,
  Vcl.Imaging.pngimage;

type
  TfrmPesqProdutoItens = class(TForm)
    RzBackground1: TRzBackground;
    RzPanel1: TRzPanel;
    JvImage1: TJvImage;
    lblTituloCliente: TRzLabel;
    lblNome: TRzLabel;
    btnTodos: TRzBitBtn;
    gdrItens: TJvDBGrid;
    RzPanel2: TRzPanel;
    btnSelecionar: TRzBitBtn;
    btnCancelar: TRzBitBtn;
    fdsProdutoItens: TpFIBDataSet;
    dsProdutoItens: TDataSource;
    fdsTabelaPreco: TpFIBDataSet;
    fdsTabelaPrecoID: TFIBBCDField;
    fdsTabelaPrecoDESCRICAO1: TFIBStringField;
    fdsTabelaPrecoDESCRICAO2: TFIBStringField;
    fdsTabelaPrecoDESCRICAO3: TFIBStringField;
    fdsTabelaPrecoDESCRICAO4: TFIBStringField;
    fdsTabelaPrecoDESCRICAO5: TFIBStringField;
    fdsTabelaPrecoDESCRICAO6: TFIBStringField;
    fdsTabelaPrecoPDV_DES1: TFIBStringField;
    fdsTabelaPrecoPDV_DES2: TFIBStringField;
    fdsTabelaPrecoPDV_DES3: TFIBStringField;
    fdsTabelaPrecoPDV_DES4: TFIBStringField;
    fdsTabelaPrecoPDV_DES5: TFIBStringField;
    fdsTabelaPrecoPDV_DES6: TFIBStringField;
    gbxTabela: TRzGroupBox;
    rdbTabela1: TRzRadioButton;
    rdbTabela2: TRzRadioButton;
    rdbTabela3: TRzRadioButton;
    rdbTabela4: TRzRadioButton;
    rdbTabela5: TRzRadioButton;
    rdbTabela6: TRzRadioButton;
    edtNome: TRzEdit;
    RzLabel2: TRzLabel;
    fdsProdutoItensID: TFIBBCDField;
    fdsProdutoItensDT_INC: TFIBDateField;
    fdsProdutoItensDT_ALT: TFIBDateField;
    fdsProdutoItensIDPRODUTO: TFIBBCDField;
    fdsProdutoItensSTATUS: TFIBStringField;
    fdsProdutoItensNOME: TFIBStringField;
    fdsProdutoItensREFERENCIA: TFIBStringField;
    fdsProdutoItensIDTAMANHO: TFIBBCDField;
    fdsProdutoItensIDCOR: TFIBBCDField;
    fdsProdutoItensPESO: TFIBBCDField;
    fdsProdutoItensPREC_CUSTO: TFIBBCDField;
    fdsProdutoItensPREC_VENDA: TFIBBCDField;
    fdsProdutoItensENVIADO_WEB: TFIBStringField;
    fdsProdutoItensPREC_TAB1: TFIBBCDField;
    fdsProdutoItensPREC_TAB2: TFIBBCDField;
    fdsProdutoItensPREC_TAB3: TFIBBCDField;
    fdsProdutoItensPREC_TAB4: TFIBBCDField;
    fdsProdutoItensPREC_TAB5: TFIBBCDField;
    fdsProdutoItensPREC_TAB6: TFIBBCDField;
    fdsProdutoItensCOD_FABRICA: TFIBStringField;
    fdsProdutoItensPREC_ULTIMO_CUSTO: TFIBBCDField;
    fdsProdutoItensDT_VALIDADE: TFIBDateField;
    fdsProdutoItensMARGEM_LUCRO: TFIBBCDField;
    fdsProdutoItensDESC_MAX1: TFIBBCDField;
    fdsProdutoItensDESC_MAX2: TFIBBCDField;
    fdsProdutoItensDESC_MAX3: TFIBBCDField;
    fdsProdutoItensDESC_MAX4: TFIBBCDField;
    fdsProdutoItensDESC_MAX5: TFIBBCDField;
    fdsProdutoItensDESC_MAX6: TFIBBCDField;
    fdsProdutoItensCOD_FABRICANTE: TFIBStringField;
    fdsProdutoItensPORCENTAGEM_AJUSTE2: TFIBBCDField;
    fdsProdutoItensPORCENTAGEM_AJUSTE3: TFIBBCDField;
    fdsProdutoItensPORCENTAGEM_AJUSTE4: TFIBBCDField;
    fdsProdutoItensPORCENTAGEM_AJUSTE5: TFIBBCDField;
    fdsProdutoItensPORCENTAGEM_AJUSTE6: TFIBBCDField;
    fdsProdutoItensCOMISSAO_DN: TFIBBCDField;
    fdsProdutoItensCOMISSAO_CH: TFIBBCDField;
    fdsProdutoItensCOMISSAO_CT: TFIBBCDField;
    fdsProdutoItensSALDO: TFIBBCDField;
    fdsProdutoItensUNIDADE: TFIBStringField;
    procedure FormActivate(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure Pesquisar;
    procedure VerificaTabelaPreco;
    procedure edtNomeKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure btnTodosClick(Sender: TObject);
    procedure btnCancelarClick(Sender: TObject);
    procedure btnSelecionarClick(Sender: TObject);
    procedure gdrItensDrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumn; State: TGridDrawState);
    procedure btnPesquisarClick(Sender: TObject);
    procedure edtNomeKeyUp(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure fdsProdutoItensBeforeOpen(DataSet: TDataSet);
    procedure FormKeyPress(Sender: TObject; var Key: Char);
  private
    { Private declarations }
  public
    var
      precUnitario, vlrDescMax : Double;
  end;

var
  frmPesqProdutoItens: TfrmPesqProdutoItens;

implementation

uses untData;

{$R *.dfm}

procedure TfrmPesqProdutoItens.btnCancelarClick(Sender: TObject);
begin
  ModalResult := mrCancel;
end;

procedure TfrmPesqProdutoItens.btnPesquisarClick(Sender: TObject);
begin
  Pesquisar;
end;

procedure TfrmPesqProdutoItens.btnSelecionarClick(Sender: TObject);
var
  selecionouTabela : Boolean;
begin
  if fdsProdutoItens.RecordCount > 0 then
  begin
    if DM.fdsConfigUTILIZAR_TABELA_PRECO.AsString = 'S' then
    begin
      selecionouTabela := False;

      if rdbTabela1.Checked then
      begin
        precUnitario := fdsProdutoItensPREC_TAB1.AsFloat;
        vlrDescMax := fdsProdutoItensDESC_MAX1.AsFloat;
        selecionouTabela := True;
      end;

      if rdbTabela2.Checked then
      begin
        precUnitario := fdsProdutoItensPREC_TAB2.AsFloat;
        vlrDescMax := fdsProdutoItensDESC_MAX2.AsFloat;
        selecionouTabela := True;
      end;

      if rdbTabela3.Checked then
      begin
        precUnitario := fdsProdutoItensPREC_TAB3.AsFloat;
        vlrDescMax := fdsProdutoItensDESC_MAX3.AsFloat;
        selecionouTabela := True;
      end;

      if rdbTabela4.Checked then
      begin
        precUnitario := fdsProdutoItensPREC_TAB4.AsFloat;
        vlrDescMax := fdsProdutoItensDESC_MAX4.AsFloat;
        selecionouTabela := True;
      end;

      if rdbTabela5.Checked then
      begin
        precUnitario := fdsProdutoItensPREC_TAB5.AsFloat;
        vlrDescMax := fdsProdutoItensDESC_MAX5.AsFloat;
        selecionouTabela := True;
      end;

      if rdbTabela6.Checked then
      begin
        precUnitario := fdsProdutoItensPREC_TAB6.AsFloat;
        vlrDescMax := fdsProdutoItensDESC_MAX6.AsFloat;
        selecionouTabela := True;
      end;


      if selecionouTabela then
        ModalResult := mrOk
      else
        Application.MessageBox('Selecione uma Tabela de Preço.', 'Atenção', MB_OK+MB_ICONEXCLAMATION);

    end
    else
      ModalResult := mrOk;
  end
  else
  begin
    Application.MessageBox('Nenhum Produto selecionado.', 'Atenção', MB_OK+MB_ICONEXCLAMATION);
    ModalResult := mrCancel;
  end;
end;

procedure TfrmPesqProdutoItens.btnTodosClick(Sender: TObject);
var
  sql : string;
begin
  edtNome.Clear;
  fdsProdutoItens.Close;
  fdsProdutoItens.SelectSQL.Clear;
  sql := 'SELECT PI.ID, PI.IDPRODUTO, PI.NOME, PI.REFERENCIA, PI.IDTAMANHO, PI.IDCOR, PI.PESO, PI.PREC_VENDA, PI.PREC_TAB1,  PI.PREC_TAB2, PI.PREC_TAB3, PI.PREC_TAB4, PI.PREC_TAB5, PI.PREC_TAB6, PIE.SALDO';
  sql := sql + ' FROM PRODUTO_ITEM PI, PRODUTO_ITEM_ESTOQUE PIE WHERE PIE.IDITEM = PI.ID AND PIE.IDFILIAL = :IDFILIAL AND PI.STATUS = ' + QuotedStr('A');
  fdsProdutoItens.SelectSQL.Add(sql);
  fdsProdutoItens.OrderClause := 'PI.NOME';
  fdsProdutoItens.Prepare;
  fdsProdutoItens.Open;
end;

procedure TfrmPesqProdutoItens.edtNomeKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  Pesquisar;
end;

procedure TfrmPesqProdutoItens.edtNomeKeyUp(Sender: TObject; var Key: Word;
  Shift: TShiftState);
var
  sql : string;
begin
  with fdsProdutoItens do
  begin
    Close;
    Conditions.Clear;
    Conditions.AddCondition('NOME', 'UPPER(PI.NOME) LIKE '+ QuotedStr('%' + edtNome.Text + '%'), True);
    Conditions.Apply;
    OrderClause := 'PI.NOME';
    Prepare;
    Open;
  end;
end;

procedure TfrmPesqProdutoItens.fdsProdutoItensBeforeOpen(DataSet: TDataSet);
begin
  fdsProdutoItens.ParamByName('IDFILIAL').AsInteger := DM.fdsConfigIDFILIAL.AsInteger;
end;

procedure TfrmPesqProdutoItens.FormActivate(Sender: TObject);
begin
  edtNome.SetFocus;

  if DM.fdsConfigUTILIZAR_TABELA_PRECO.AsString = 'S' then
  begin
    gdrItens.Columns[1].Visible := False;
    VerificaTabelaPreco;
  end
  else
  begin
    gbxTabela.Visible := False;
    gdrItens.Columns[2].Visible := False;
    gdrItens.Columns[3].Visible := False;
    gdrItens.Columns[4].Visible := False;
    gdrItens.Columns[5].Visible := False;
    gdrItens.Columns[6].Visible := False;
    gdrItens.Columns[7].Visible := False;
  end;

end;

procedure TfrmPesqProdutoItens.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if Key = VK_F5 then
  begin
    btnSelecionar.Click;
  end
  else
    if Key = VK_ESCAPE then
    begin
      btnCancelar.Click;
    end
end;

procedure TfrmPesqProdutoItens.FormKeyPress(Sender: TObject; var Key: Char);
begin
  if Key = #13 then
  begin
    btnSelecionar.Click;
  end;
end;

procedure TfrmPesqProdutoItens.gdrItensDrawColumnCell(Sender: TObject;
  const Rect: TRect; DataCol: Integer; Column: TColumn; State: TGridDrawState);
begin
  if not odd(fdsProdutoItens.RecNo) then
  begin
    gdrItens.Canvas.Brush.Color := DM.gridOddColor;
    gdrItens.Canvas.FillRect(Rect);
    gdrItens.DefaultDrawDataCell(rect,Column.Field,state);
  end;
end;

procedure TfrmPesqProdutoItens.Pesquisar;
var
  sql : string;
begin
  

 { fdsProdutoItens.Close;
  fdsProdutoItens.SelectSQL.Clear;
  sql := 'SELECT ID, IDPRODUTO, NOME, REFERENCIA, IDTAMANHO, IDCOR, PESO, PREC_VENDA FROM PRODUTO_ITEM WHERE UPPER(NOME) LIKE '+ QuotedStr('%' + edtNome.Text + '%');
  fdsProdutoItens.SelectSQL.Add(sql);
  fdsProdutoItens.OrderClause := 'NOME';
  fdsProdutoItens.Prepare;
  fdsProdutoItens.Open;}
end;

procedure TfrmPesqProdutoItens.VerificaTabelaPreco;
var
  tempLeft : integer;
begin
  tempLeft := 8;
  fdsTabelaPreco.Open;

  if fdsTabelaPrecoPDV_DES1.AsString = 'N' then
  begin
    rdbTabela1.Visible := False;
    gdrItens.Columns[2].Visible := False;
  end
  else
  begin
    rdbTabela1.Caption := fdsTabelaPrecoDESCRICAO1.AsString;
    gdrItens.Columns[2].Title.Caption := fdsTabelaPrecoDESCRICAO1.AsString;
    rdbTabela1.Left := tempLeft;
    tempLeft := tempLeft + 80;
    if fdsTabelaPrecoPDV_DES1.AsString = 'P' then
      rdbTabela1.Checked := True;

  end;

  if fdsTabelaPrecoPDV_DES2.AsString = 'N' then
  begin
    rdbTabela2.Visible := False;
    gdrItens.Columns[3].Visible := False;
  end
  else
  begin
    rdbTabela2.Caption := fdsTabelaPrecoDESCRICAO2.AsString;
    gdrItens.Columns[3].Title.Caption := fdsTabelaPrecoDESCRICAO2.AsString;
    rdbTabela2.Left := tempLeft;
    tempLeft := tempLeft + 80;
    if fdsTabelaPrecoPDV_DES2.AsString = 'P' then
      rdbTabela2.Checked := True;

  end;

  if fdsTabelaPrecoPDV_DES3.AsString = 'N' then
  begin
    rdbTabela3.Visible := False;
    gdrItens.Columns[4].Visible := False;
  end
  else
  begin
    rdbTabela3.Caption := fdsTabelaPrecoDESCRICAO3.AsString;
    gdrItens.Columns[4].Title.Caption := fdsTabelaPrecoDESCRICAO3.AsString;
    rdbTabela3.Left := tempLeft;
    tempLeft := tempLeft + 80;
    if fdsTabelaPrecoPDV_DES3.AsString = 'P' then
      rdbTabela3.Checked := True;

  end;

  if fdsTabelaPrecoPDV_DES4.AsString = 'N' then
  begin
    rdbTabela4.Visible := False;
    gdrItens.Columns[5].Visible := False;
  end
  else
  begin
    rdbTabela4.Caption := fdsTabelaPrecoDESCRICAO4.AsString;
    gdrItens.Columns[5].Title.Caption := fdsTabelaPrecoDESCRICAO4.AsString;
    rdbTabela4.Left := tempLeft;
    tempLeft := tempLeft + 80;
    if fdsTabelaPrecoPDV_DES4.AsString = 'P' then
      rdbTabela4.Checked := True;

  end;

  if fdsTabelaPrecoPDV_DES5.AsString = 'N' then
  begin
    rdbTabela5.Visible := False;
    gdrItens.Columns[6].Visible := False;
  end
  else
  begin
    rdbTabela5.Caption := fdsTabelaPrecoDESCRICAO5.AsString;
    gdrItens.Columns[6].Title.Caption := fdsTabelaPrecoDESCRICAO5.AsString;
    rdbTabela5.Left := tempLeft;
    tempLeft := tempLeft + 80;
    if fdsTabelaPrecoPDV_DES5.AsString = 'P' then
      rdbTabela5.Checked := True;
  end;

  if fdsTabelaPrecoPDV_DES6.AsString = 'N' then
  begin
    rdbTabela6.Visible := False;
    gdrItens.Columns[7].Visible := False;
  end
  else
  begin
    rdbTabela6.Caption := fdsTabelaPrecoDESCRICAO6.AsString;
    gdrItens.Columns[7].Title.Caption := fdsTabelaPrecoDESCRICAO6.AsString;
    rdbTabela6.Left := tempLeft;
    tempLeft := tempLeft + 80;
    if fdsTabelaPrecoPDV_DES6.AsString = 'P' then
      rdbTabela6.Checked := True;

  end;
end;

end.
